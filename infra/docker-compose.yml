services:
  db:
    container_name: db
    image: postgres:17
    volumes:
      - data_value:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - ../.env
    networks:
      analyzer_network:
        ipv4_address: 172.21.0.2

  redis:
    container_name: analyzer_redis
    image: redis:7-alpine
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    env_file:
      - ../.env
    depends_on:
      - db
    networks:
      analyzer_network:
        ipv4_address: 172.21.0.3

  backend:
    container_name: analyzer_backend
    build: ../.
    restart: always
    environment:
      - TZ=UTC
      - CONTAINER_TYPE=backend
    depends_on:
      - db
    env_file:
      - ../.env
    networks:
      analyzer_network:
        ipv4_address: 172.21.0.4

  worker:
    container_name: celery_worker
    build: ../.
    depends_on:
      - db
      - redis
    environment:
      - CONTAINER_TYPE=celery
    networks:
      analyzer_network:
        ipv4_address: 172.21.0.5

  dashboard:
    container_name: flower_dashboard
    image: mher/flower
    command: celery --broker=${REDIS_CONNECT_URL} flower --port=5555
    environment:
      - CELERY_BROKER_URL=${REDIS_CONNECT_URL}
      - CELERY_RESULT_BACKEND=${REDIS_CONNECT_URL}
    depends_on:
      - backend
      - redis
      - worker
    networks:
      analyzer_network:
        ipv4_address: 172.21.0.6

volumes:
  data_value:

networks:
  analyzer_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
